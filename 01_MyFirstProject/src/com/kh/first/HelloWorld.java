//주석:소스코드 내에 해당 코드에 대한 설명을 기술하고 싶을 때 사용(소스코드와 무관, 코드로 인식되지 않는 부분)
//한줄 짜리 주석
/*
 *여러줄
 *작성하는
 *주석
 */ 
/*
 * 자바 프로그래밍 순서
 * 1. 프로젝트 생성
 * 2. 패키지 생성(src 폴더 내부에 생성)
 * 3. 클래스 생성(패키지 내부에 생성)
 */

/* Project: 내가 만들 프로그램에 필요한 모든 파일, 폴더들을 담고있는 최상위 폴더
 *          즉, 프로그램 1개 단위=프로젝트 폴더 1개
 * 
 */

package com.kh.first;

/* Package: 프로젝트 내에 존재하는 src 폴더 내에 소스코드들을 보관하는 폴더 개념
 * 
 * - 패키지 생성 시  규칙
 * 1. 패키지는 무조건 소문자로 만든다.
 * 2. 패키지 내부에 새로운 패키지를 만들 경우,기존패키지명.새로운패키지명 으로 짓는다.
 * 3. com.kh.first 이렇게 한번에 패키지들을 만들 수 있다.
 * 
 * - 패키지 생성 시 주의사항
 * 1. 한 패키지 내에 동일한 이름의 패키지가 존재할 수 없다.(이름의 중복 불가)
 * 2. 한 패키지 내에 동일한 이름의 클래스가 존재할 수 없다.(이름의 중복 불가)
 * 3. 기본 패키지(패키지가 없는 상태)에 클래스를 만드는 것은 권장하지 않는다.
 *     이유?: 모든 클래스(부품)들을 기본 패키지에 분류하지 않고 몰아넣으면 관리가 어렵다.
 *         : 기본 패키지에 만들어진 클래스들은 절대 다른 패키지에서 사용 불가(클래스의 위치를 찾아갈 수 없다.) 
 *           
 * - 패키지 생성 시 권장사항
 * 1. 패키지는 적어도 세단계 이상으로 만드는 것을 권장한다.
 *   -> com.회사명.프로젝트명 또는 com.회사명.팀명.카테고리명 이런 식으로 많이 사용
 * 2. 패키지의 두번째 레벨까지는 주로 도메인 주소의 역순으로 쓴다.(ex. www.naver.com)             
 *     이유?: 도메인 주소는 고유한 이름이기 때문(이름의 중복 불가)  
 *         : 패키지만 봐도 어디서 제작한 프로젝트인지 직관적으로 파악이 가능           
 */  
public class HelloWorld {

	/* 
	 * Class: 유사한 특징을 지닌 변수와 메소드들을 묶어 놓은 집합체
	 *        자바에서는 모든 코드들이 반드시 파일(.java) 안에 존재
	 *        이때 한 개의 클래스 = 한 개의 .java 파일이 된다.
	 */
	
}
