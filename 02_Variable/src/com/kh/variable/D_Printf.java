package com.kh.variable;

public class D_Printf {

	/*
	 * *출력문 종류
	 * 1.System.out.println(출력하려는 값);=>값을 출력 후에 줄바꿈해주는 역할
	 * 2.System.out.print(출력하려는 값);  =>값을 출력만 하는 역할(줄바꿈x)
	 *  
	 * [ 표현법 ] 
	 * System.out.printf("출력하고자 하는 형식", 출력하려는 값);
	 * => f는 format(형식)을 의미
	 * => 형식에 맞게 값들이 출력되고, 줄바꿈은 일어나지 않음
	 * => 문자열 안에 그 값들이 들어갈 자리를 다음과 같은 형식으로 잡아줘야 한다.
	 * 
	 * 형식
	 * %d: 정수가 들어갈 자리
	 * %f: 실수가 들어갈 자리
	 * %c: 문자가 들어갈 자리
	 * %s: 문자열이 들어갈 자리
	 */  
	public void printfTest() {
		
		// 정수 테스트(%d)
		int iNum1=10;
		int iNum2=20;
		
		// iNum1: xx,iNum2: xx 이런 형식으로 출력 
		//1. println 사용
		System.out.println("iNum1: "+iNum1+",iNum2: "+iNum2);
		
		//2. printf 사용
		System.out.printf("iNum1: %d, iNum2: %d \n", iNum1, iNum2);
		//정수값이므로 %d라는 형식으로 자리를 잡아준다.
		//단, printf는 줄바꿈 기능이 없기 때문에  개행문자 \n을 추가해서 줄바꿈해야 한다.
		
		//10+20=30을 출력해보자
		//1. println 사용
		System.out.println(iNum1+"+"+iNum2+"="+(iNum1+iNum2));
		
		//2. printf 사용
		System.out.printf("%d+%d=%d \n",iNum1, iNum2,(iNum1+iNum2));
		
		//함께 사용할 수 있는 옵션
		System.out.printf("%5d \n", iNum1);  //%5d: 5칸의 공간 중 오른쪽 정렬
		System.out.printf("%-5d \n", iNum2); //%-5d: 5칸의 공간 중 왼쪽 정렬(음수)
		System.out.printf("%5d \n", 100);
		
		//2. 실수 테스트(%f)
		double dNum = 4.27546789;
		System.out.printf("dNum: %f \n", dNum); //dNum: 4.275468
		//%f: 소숫점 아래 7번째 줄에서 반올림이 되어 소숫점 아래 6번째까지만 출력이 된다.
		
		System.out.printf("dNum: %.1f \n", dNum); //dNum: 4.3 
		// %.1f: 소숫점 아래 2번째 줄에서 반올림되어 소숫점 아래 1번째까지만 출력이 된다.
		
		// 문자와 문자열 테스트(%c, %s)
		char ch = 'a';
		String str="Hello";
		
		System.out.printf("%c\t%s \n", ch, str); //a Hello
			// \t : tab 키를 누른 것과 동일하게 들여쓰기됨
		    // \n : enter키를 한번 누른 효과
		
		    // 옵션!
		System.out.printf("%C %S", ch, str); //영어 알파벳일 경우 대문자로 출력
		
		/*
		 * printf : 포맷 단 한번 제시로 간편하게 출력 가능하다.
		 *          단, 지정한 포맷의 개수와 종류, 뒤에 오는 변수의 개수와 종류가 정확히 맞아야 한다.
		 */
		
		
	}
	
	
	
}
